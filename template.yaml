AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serenup_serverless_functions

  Sample SAM Template for serenup_serverless_functions

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  KinesisStream:
    Type: String
    Description: ARN of the Amazon Kinesis Stream
  TimestreamDatabase:
    Type: String
    Description: Name of the timestream db that stores bracelet data
  TimestreamTableName:
    Type: String
    Description: Name of the timestream db table that stores bracelet data
  BatteryAnalyticsDynamoTable:
    Type: String
    Description: DynamoDB Table name to store analytics results

Resources:
  BraceletSensorsTimestreamWriter:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.9
      CodeUri: bracelet_sensors_timestream_writer/
      Architectures:
        - x86_64
      Policies:
        - AmazonTimestreamFullAccess
      Environment:
        Variables:
          TIMESTREAM_DB: !Ref TimestreamDatabase
          TIMESTREAM_TABLE: !Ref TimestreamTableName
      Events:
        NewBraceletDataInShard:
          Type: Kinesis
          Properties:
            Stream: !Ref KinesisStream
            StartingPosition: LATEST
            MaximumRetryAttempts: 1
            BatchSize: 100
            MaximumBatchingWindowInSeconds: 2
  BraceletMetricsAnalysis:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.9
      CodeUri: bracelet_metric_analysis/
      Architectures:
        - x86_64
      Environment:
        Variables:
          BatteryAnalyticsDynamoTable: !Ref BatteryAnalyticsDynamoTable
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        NewBraceletDataInShard:
          Type: Kinesis
          Properties:
            Stream: !Ref KinesisStream
            StartingPosition: LATEST
            MaximumRetryAttempts: 1
            BatchSize: 100
            MaximumBatchingWindowInSeconds: 2
  MetricsAPI:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: metrics_reader/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - AmazonTimestreamFullAccess
      Environment:
        Variables:
          TIMESTREAM_DB: !Ref TimestreamDatabase
          TIMESTREAM_TABLE: !Ref TimestreamTableName
      Events:
        GetMetricsForUser:
          Type: Api
          Properties:
            Method: GET
            Path: /bracelets/{bracelet_id}
            RequestParameters:
              - method.request.querystring.metric:
                  Required: false
                  Caching: false
              - method.request.querystring.from:
                  Required: false
                  Caching: false
  GetBraceletByCustomer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_bracelets_by_customer/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - AmazonTimestreamFullAccess
      Environment:
        Variables:
          TIMESTREAM_DB: !Ref TimestreamDatabase
          TIMESTREAM_TABLE: !Ref TimestreamTableName
      Events:
        GetMetricsForUser:
          Type: Api
          Properties:
            Method: GET
            Path: /users/{customer_id}/bracelets

Outputs:
  BraceletSensorsTimestreamWriter:
    Description: "Kinesis to timestream adapter"
    Value: !GetAtt BraceletSensorsTimestreamWriter.Arn
  MetricsAPI:
    Description: "API Gateway endpoint URL for Prod stage for MetricsAPI function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  MetricsAPIFunction:
    Description: "Metrics APIs Lambda Function ARN"
    Value: !GetAtt MetricsAPI.Arn
